[General]
network = OPSNetwork



#simulation control parameters
sim-time-limit = 604800s # 7 days
repeat = 1



# RNG initialization
num-rngs = 6
seed-0-mt = 1000   # left specifically unused for "unknown" RNG uses
seed-1-mt = 2000   # application
seed-2-mt = 3000   # user behaviour model RNG
seed-3-mt = 4000   # forwarding RNG
seed-4-mt = 5000   # link layer RNG
seed-5-mt = 6000   # mobility RNG



# results location
result-dir = results/
output-vector-file = "${resultdir}/${inifile}-${configname}-${runnumber}.vec"
output-scalar-file = "${resultdir}/${inifile}-${configname}-${runnumber}.sca"



# statistic collection
**.vector-recording = true
**.scalar-recording = true
**.statistic-recording = true



# network parameters
**.numNodes = 500



[Config Herald-NOF-SWIM]

# application layer (herald)
**.applicationLayer = "KHeraldApp"
**.app.dataGenerationInterval = 900s # every 1/4 of an hour - we simulate for 7 days
**.app.dataSizeInBytes = 10000
**.app.popularityAssignmentPercentage = 25
**.app.usedRNG = 1



# forwarding layer parameters
**.forwardingLayer = "KNeighbourOrderedForwarding"
**.forwarding.maximumCacheSize = 5000000byte # 5 MB cache
**.forwarding.antiEntropyInterval = 300s
**.forwarding.maximumHopCount = 25
**.forwarding.usedRNG = 3



# wireless interface parameters
**.linkLayer = "KWirelessInterfaceWithAngle"
**.link.wirelessRange = 30m
**.link.neighbourScanInterval = 1s
**.link.bandwidthBitRate = 100000bps # 100 Kbps
**.link.wirelessHeaderSize = 16byte # BT header
**.link.usedRNG = 4



# INET mobility parameters (SWIM)
**.constraintAreaMinX = 0m
**.constraintAreaMinY = 0m
**.constraintAreaMinZ = 0m
**.constraintAreaMaxX = 1500m
**.constraintAreaMaxY = 1500m
**.constraintAreaMaxZ = 0m
**.updateInterval = 1s # test with 0s too, and let getCurrentPosition update the display string from a test module
**.mobility.initFromDisplayString = false
**.mobilityType = "SWIMMobility"
**.mobility.noOfLocations = 200
**.mobility.Hosts = 500
**.mobility.popularityDecisionThreshold = 7
**.mobility.returnHomePercentage = 15
**.mobility.neighbourLocationLimit = 200m
**.mobility.speed = uniform(10mps, 100mps, 5)
**.mobility.radius = 2m
**.mobility.alpha = 0.5
**.mobility.waitTime = uniform(5s, 10s, 5) # 20 mins - 8 hrs
**.mobility.usedRNG = 5



[Config Herald-Epidemic-SWIM]

# application layer (herald)
**.applicationLayer = "KHeraldApp"
**.app.dataGenerationInterval = 900s # every 1/4 of an hour - we simulate for 7 days
**.app.dataSizeInBytes = 10000
**.app.popularityAssignmentPercentage = 25
**.app.usedRNG = 1



# forwarding layer parameters
**.forwardingLayer = "KEpidemicRoutingLayer"
**.forwarding.maximumCacheSize = 5000000byte # 5 MB cache
**.forwarding.antiEntropyInterval = 300s
**.forwarding.maximumHopCount = 25
**.forwarding.usedRNG = 3



# wireless interface parameters
**.linkLayer = "KWirelessInterface"
**.link.wirelessRange = 30m
**.link.neighbourScanInterval = 1s
**.link.bandwidthBitRate = 100000bps # 100 Kbps
**.link.wirelessHeaderSize = 16byte # BT header
**.link.usedRNG = 4



# INET mobility parameters (SWIM)
**.constraintAreaMinX = 0m
**.constraintAreaMinY = 0m
**.constraintAreaMinZ = 0m
**.constraintAreaMaxX = 1500m
**.constraintAreaMaxY = 1500m
**.constraintAreaMaxZ = 0m
**.updateInterval = 1s # test with 0s too, and let getCurrentPosition update the display string from a test module
**.mobility.initFromDisplayString = false
**.mobilityType = "SWIMMobility"
**.mobility.noOfLocations = 200
**.mobility.Hosts = 500
**.mobility.popularityDecisionThreshold = 7
**.mobility.returnHomePercentage = 15
**.mobility.neighbourLocationLimit = 200m
**.mobility.speed = 1.5mps
**.mobility.radius = 2m
**.mobility.alpha = 0.5
**.mobility.waitTime = uniform(1200s, 28800s, 5) # 20 mins - 8 hrs
**.mobility.usedRNG = 5



[Config Herald-Keetchi-SWIM]

# application layer (herald)
**.applicationLayer = "KHeraldApp"
**.app.dataGenerationInterval = 900s # every 1/4 of an hour - we simulate for 7 days
**.app.dataSizeInBytes = 10000
**.app.popularityAssignmentPercentage = 25
**.app.usedRNG = 1



# forwarding layer parameters
**.forwardingLayer = "KKeetchiLayer"
**.forwarding.agingInterval = 600s
**.forwarding.maximumCacheSize = 5000000byte # 5 MB cache
**.forwarding.neighbourhoodChangeSignificanceThreshold = 0.25
**.forwarding.coolOffDuration = 300s
**.forwarding.learningConst = 0.5
**.forwarding.backoffTimerIncrementFactor = 1.5
**.forwarding.usedRNG = 3



# wireless interface parameters
**.linkLayer = "KWirelessInterface"
**.link.wirelessRange = 30m
**.link.neighbourScanInterval = 1s
**.link.bandwidthBitRate = 100000bps # 100 Kbps
**.link.wirelessHeaderSize = 16byte # BT header
**.link.usedRNG = 4



# INET mobility parameters (SWIM)
**.constraintAreaMinX = 0m
**.constraintAreaMinY = 0m
**.constraintAreaMinZ = 0m
**.constraintAreaMaxX = 1500m
**.constraintAreaMaxY = 1500m
**.constraintAreaMaxZ = 0m
**.updateInterval = 1s # test with 0s too, and let getCurrentPosition update the display string from a test module
**.mobility.initFromDisplayString = false
**.mobilityType = "SWIMMobility"
**.mobility.noOfLocations = 200
**.mobility.Hosts = 500
**.mobility.popularityDecisionThreshold = 7
**.mobility.returnHomePercentage = 15
**.mobility.neighbourLocationLimit = 200m
**.mobility.speed = 1.5mps
**.mobility.radius = 2m
**.mobility.alpha = 0.5
**.mobility.waitTime = uniform(1200s, 28800s, 5) # 20 mins - 8 hrs
**.mobility.usedRNG = 5



[Config Herald-Optimum-Delay-SWIM]

# application layer (herald)
**.applicationLayer = "KHeraldApp"
**.app.dataGenerationInterval = 900s # every 1/4 of an hour - we simulate for 7 days
**.app.dataSizeInBytes = 10000
**.app.popularityAssignmentPercentage = 25
**.app.usedRNG = 1



# forwarding layer parameters
**.forwardingLayer = "KOptimumDelayRoutingLayer"



# wireless interface parameters
**.linkLayer = "KWirelessInterface"
**.link.wirelessRange = 30m
**.link.neighbourScanInterval = 1s
**.link.bandwidthBitRate = 100000bps # 100 Kbps
**.link.wirelessHeaderSize = 16byte # BT header
**.link.usedRNG = 4



# INET mobility parameters (SWIM)
**.constraintAreaMinX = 0m
**.constraintAreaMinY = 0m
**.constraintAreaMinZ = 0m
**.constraintAreaMaxX = 1500m
**.constraintAreaMaxY = 1500m
**.constraintAreaMaxZ = 0m
**.updateInterval = 1s # test with 0s too, and let getCurrentPosition update the display string from a test module
**.mobility.initFromDisplayString = false
**.mobilityType = "SWIMMobility"
**.mobility.noOfLocations = 200
**.mobility.Hosts = 500
**.mobility.popularityDecisionThreshold = 7
**.mobility.returnHomePercentage = 15
**.mobility.neighbourLocationLimit = 200m
**.mobility.speed = 1.5mps
**.mobility.radius = 2m
**.mobility.alpha = 0.5
**.mobility.waitTime = uniform(1200s, 28800s, 5) # 20 mins - 8 hrs
**.mobility.usedRNG = 5



[Config Herald-RRS-SWIM]

# application layer (herald)
**.applicationLayer = "KHeraldApp"
**.app.dataGenerationInterval = 900s # every 1/4 of an hour - we simulate for 7 days
**.app.dataSizeInBytes = 10000
**.app.popularityAssignmentPercentage = 25
**.app.usedRNG = 1



# forwarding layer parameters
**.forwardingLayer = "KRRSLayer"
**.forwarding.maximumCacheSize = 5000000byte # 5 MB cache
**.forwarding.usedRNG = 3
**.forwarding.broadcastRRS = false
**.forwarding.sendOnNeighReportingFrequency = false
**.forwarding.sendFrequencyWhenNotOnNeighFrequency = 4s



# wireless interface parameters
**.linkLayer = "KWirelessInterface"
**.link.wirelessRange = 30m
**.link.neighbourScanInterval = 1s
**.link.bandwidthBitRate = 100000bps # 100 Kbps
**.link.wirelessHeaderSize = 16byte # BT header
**.link.usedRNG = 4



# INET mobility parameters (SWIM)
**.constraintAreaMinX = 0m
**.constraintAreaMinY = 0m
**.constraintAreaMinZ = 0m
**.constraintAreaMaxX = 1500m
**.constraintAreaMaxY = 1500m
**.constraintAreaMaxZ = 0m
**.updateInterval = 1s # test with 0s too, and let getCurrentPosition update the display string from a test module
**.mobility.initFromDisplayString = false
**.mobilityType = "SWIMMobility"
**.mobility.noOfLocations = 200
**.mobility.Hosts = 500
**.mobility.popularityDecisionThreshold = 7
**.mobility.returnHomePercentage = 15
**.mobility.neighbourLocationLimit = 200m
**.mobility.speed = 1.5mps
**.mobility.radius = 2m
**.mobility.alpha = 0.5
**.mobility.waitTime = uniform(1200s, 28800s, 5) # 20 mins - 8 hrs
**.mobility.usedRNG = 5



[Config Messenger-Epidemic-SWIM]

# application layer (messenger)
**.applicationLayer = "KMessengerApp"
**.app.dataGenerationInterval = 900s # every 1/4 of an hour - we simulate for 7 days
**.app.dataSizeInBytes = 10000
**.app.usedRNG = 1



# forwarding layer parameters
**.forwardingLayer = "KEpidemicRoutingLayer"
**.forwarding.maximumCacheSize = 5000000byte # 5 MB cache
**.forwarding.antiEntropyInterval = 300s
**.forwarding.maximumHopCount = 25
**.forwarding.usedRNG = 3



# wireless interface parameters
**.linkLayer = "KWirelessInterface"
**.link.wirelessRange = 30m
**.link.neighbourScanInterval = 1s
**.link.bandwidthBitRate = 100000bps # 100 Kbps
**.link.wirelessHeaderSize = 16byte # BT header
**.link.usedRNG = 4



# INET mobility parameters (SWIM)
**.constraintAreaMinX = 0m
**.constraintAreaMinY = 0m
**.constraintAreaMinZ = 0m
**.constraintAreaMaxX = 1500m
**.constraintAreaMaxY = 1500m
**.constraintAreaMaxZ = 0m
**.updateInterval = 1s # test with 0s too, and let getCurrentPosition update the display string from a test module
**.mobility.initFromDisplayString = false
**.mobilityType = "SWIMMobility"
**.mobility.noOfLocations = 200
**.mobility.Hosts = 500
**.mobility.popularityDecisionThreshold = 7
**.mobility.returnHomePercentage = 15
**.mobility.neighbourLocationLimit = 200m
**.mobility.speed = 1.5mps
**.mobility.radius = 2m
**.mobility.alpha = 0.5
**.mobility.waitTime = uniform(1200s, 28800s, 5) # 20 mins - 8 hrs
**.mobility.usedRNG = 5



[Config Messenger-Epidemic-Specific-Dest-SWIM]

# application layer (messenger)
**.applicationLayer = "KMessengerApp"
**.app.dataGenerationInterval = 900s # every 1/4 of an hour - we simulate for 7 days
**.app.dataSizeInBytes = 10000
**.app.usedRNG = 1
**.app.specificDestination = true
**.app.specificDestinationNodeName = "host[0]"



# forwarding layer parameters
**.forwardingLayer = "KEpidemicRoutingLayer"
**.forwarding.maximumCacheSize = 5000000byte # 5 MB cache
**.forwarding.antiEntropyInterval = 300s
**.forwarding.maximumHopCount = 25
**.forwarding.usedRNG = 3



# wireless interface parameters
**.linkLayer = "KWirelessInterface"
**.link.wirelessRange = 30m
**.link.neighbourScanInterval = 1s
**.link.bandwidthBitRate = 100000bps # 100 Kbps
**.link.wirelessHeaderSize = 16byte # BT header
**.link.usedRNG = 4



# INET mobility parameters (SWIM)
**.constraintAreaMinX = 0m
**.constraintAreaMinY = 0m
**.constraintAreaMinZ = 0m
**.constraintAreaMaxX = 1500m
**.constraintAreaMaxY = 1500m
**.constraintAreaMaxZ = 0m
**.updateInterval = 1s # test with 0s too, and let getCurrentPosition update the display string from a test module
**.mobility.initFromDisplayString = false
**.mobilityType = "SWIMMobility"
**.mobility.noOfLocations = 200
**.mobility.Hosts = 500
**.mobility.popularityDecisionThreshold = 7
**.mobility.returnHomePercentage = 15
**.mobility.neighbourLocationLimit = 200m
**.mobility.speed = 1.5mps
**.mobility.radius = 2m
**.mobility.alpha = 0.5
**.mobility.waitTime = uniform(1200s, 28800s, 5) # 20 mins - 8 hrs
**.mobility.usedRNG = 5



[Config Messenger-Keetchi-SWIM]

# application layer (messenger)
**.applicationLayer = "KMessengerApp"
**.app.dataGenerationInterval = 900s # every 1/4 of an hour - we simulate for 7 days
**.app.dataSizeInBytes = 10000
**.app.usedRNG = 1



# forwarding layer parameters
**.forwardingLayer = "KKeetchiLayer"
**.forwarding.agingInterval = 600s
**.forwarding.maximumCacheSize = 5000000byte # 5 MB cache
**.forwarding.neighbourhoodChangeSignificanceThreshold = 0.25
**.forwarding.coolOffDuration = 300s
**.forwarding.learningConst = 0.5
**.forwarding.backoffTimerIncrementFactor = 1.5
**.forwarding.usedRNG = 3



# wireless interface parameters
**.linkLayer = "KWirelessInterface"
**.link.wirelessRange = 30m
**.link.neighbourScanInterval = 1s
**.link.bandwidthBitRate = 100000bps # 100 Kbps
**.link.wirelessHeaderSize = 16byte # BT header
**.link.usedRNG = 4



# INET mobility parameters (SWIM)
**.constraintAreaMinX = 0m
**.constraintAreaMinY = 0m
**.constraintAreaMinZ = 0m
**.constraintAreaMaxX = 1500m
**.constraintAreaMaxY = 1500m
**.constraintAreaMaxZ = 0m
**.updateInterval = 1s # test with 0s too, and let getCurrentPosition update the display string from a test module
**.mobility.initFromDisplayString = false
**.mobilityType = "SWIMMobility"
**.mobility.noOfLocations = 200
**.mobility.Hosts = 500
**.mobility.popularityDecisionThreshold = 7
**.mobility.returnHomePercentage = 15
**.mobility.neighbourLocationLimit = 200m
**.mobility.speed = 1.5mps
**.mobility.radius = 2m
**.mobility.alpha = 0.5
**.mobility.waitTime = uniform(1200s, 28800s, 5) # 20 mins - 8 hrs
**.mobility.usedRNG = 5



[Config Messenger-Optimum-Delay-SWIM]

# application layer (messenger)
**.applicationLayer = "KMessengerApp"
**.app.dataGenerationInterval = 900s # every 1/4 of an hour - we simulate for 7 days
**.app.dataSizeInBytes = 10000
**.app.usedRNG = 1



# forwarding layer parameters
**.forwardingLayer = "KOptimumDelayRoutingLayer"



# wireless interface parameters
**.linkLayer = "KWirelessInterface"
**.link.wirelessRange = 30m
**.link.neighbourScanInterval = 1s
**.link.bandwidthBitRate = 100000bps # 100 Kbps
**.link.wirelessHeaderSize = 16byte # BT header
**.link.usedRNG = 4



# INET mobility parameters (SWIM)
**.constraintAreaMinX = 0m
**.constraintAreaMinY = 0m
**.constraintAreaMinZ = 0m
**.constraintAreaMaxX = 1500m
**.constraintAreaMaxY = 1500m
**.constraintAreaMaxZ = 0m
**.updateInterval = 1s # test with 0s too, and let getCurrentPosition update the display string from a test module
**.mobility.initFromDisplayString = false
**.mobilityType = "SWIMMobility"
**.mobility.noOfLocations = 200
**.mobility.Hosts = 500
**.mobility.popularityDecisionThreshold = 7
**.mobility.returnHomePercentage = 15
**.mobility.neighbourLocationLimit = 200m
**.mobility.speed = 1.5mps
**.mobility.radius = 2m
**.mobility.alpha = 0.5
**.mobility.waitTime = uniform(1200s, 28800s, 5) # 20 mins - 8 hrs
**.mobility.usedRNG = 5



[Config Messenger-PRoPHET-SWIM]

# application layer (messenger)
**.applicationLayer = "KMessengerApp"
**.app.dataGenerationInterval = 900s # every 1/4 of an hour - we simulate for 7 days
**.app.dataSizeInBytes = 10000
**.app.usedRNG = 1



# forwarding layer parameters
**.forwardingLayer = "KProphetRoutingLayer"
**.forwarding.maximumCacheSize = 5000000byte # 5 MB cache
**.forwarding.antiEntropyInterval = 300s
**.forwarding.maximumHopCount = 25
**.forwarding.usedRNG = 3
**.forwarding.pEncounterMax = 0.7
**.forwarding.pEncounterFirst = 0.5
**.forwarding.pFirstThreshold = 0.1
**.forwarding.alpha = 0.5
**.forwarding.beta = 0.9
**.forwarding.gamma = 0.998
**.forwarding.delta = 0.1
**.forwarding.standardTimeInterval = 3600s



# wireless interface parameters
**.linkLayer = "KWirelessInterface"
**.link.wirelessRange = 30m
**.link.neighbourScanInterval = 1s
**.link.bandwidthBitRate = 100000bps # 100 Kbps
**.link.wirelessHeaderSize = 16byte # BT header
**.link.usedRNG = 4



# INET mobility parameters (SWIM)
**.constraintAreaMinX = 0m
**.constraintAreaMinY = 0m
**.constraintAreaMinZ = 0m
**.constraintAreaMaxX = 1500m
**.constraintAreaMaxY = 1500m
**.constraintAreaMaxZ = 0m
**.updateInterval = 1s # test with 0s too, and let getCurrentPosition update the display string from a test module
**.mobility.initFromDisplayString = false
**.mobilityType = "SWIMMobility"
**.mobility.noOfLocations = 200
**.mobility.Hosts = 500
**.mobility.popularityDecisionThreshold = 7
**.mobility.returnHomePercentage = 15
**.mobility.neighbourLocationLimit = 200m
**.mobility.speed = 1.5mps
**.mobility.radius = 2m
**.mobility.alpha = 0.5
**.mobility.waitTime = uniform(1200s, 28800s, 5) # 20 mins - 8 hrs
**.mobility.usedRNG = 5



[Config Messenger-RRS-SWIM]

# application layer (messenger)
**.applicationLayer = "KMessengerApp"
**.app.dataGenerationInterval = 900s # every 1/4 of an hour - we simulate for 7 days
**.app.dataSizeInBytes = 10000
**.app.usedRNG = 1



# forwarding layer parameters
**.forwardingLayer = "KRRSLayer"
**.forwarding.maximumCacheSize = 5000000byte # 5 MB cache
**.forwarding.usedRNG = 3
**.forwarding.broadcastRRS = false
**.forwarding.sendOnNeighReportingFrequency = false
**.forwarding.sendFrequencyWhenNotOnNeighFrequency = 4s



# wireless interface parameters
**.linkLayer = "KWirelessInterface"
**.link.wirelessRange = 30m
**.link.neighbourScanInterval = 1s
**.link.bandwidthBitRate = 100000bps # 100 Kbps
**.link.wirelessHeaderSize = 16byte # BT header
**.link.usedRNG = 4



# INET mobility parameters (SWIM)
**.constraintAreaMinX = 0m
**.constraintAreaMinY = 0m
**.constraintAreaMinZ = 0m
**.constraintAreaMaxX = 1500m
**.constraintAreaMaxY = 1500m
**.constraintAreaMaxZ = 0m
**.updateInterval = 1s # test with 0s too, and let getCurrentPosition update the display string from a test module
**.mobility.initFromDisplayString = false
**.mobilityType = "SWIMMobility"
**.mobility.noOfLocations = 200
**.mobility.Hosts = 500
**.mobility.popularityDecisionThreshold = 7
**.mobility.returnHomePercentage = 15
**.mobility.neighbourLocationLimit = 200m
**.mobility.speed = 1.5mps
**.mobility.radius = 2m
**.mobility.alpha = 0.5
**.mobility.waitTime = uniform(1200s, 28800s, 5) # 20 mins - 8 hrs
**.mobility.usedRNG = 5



[Config Messenger-Spray-n-Wait-SWIM]

# application layer (messenger)
**.applicationLayer = "KMessengerApp"
**.app.dataGenerationInterval = 900s # every 1/4 of an hour - we simulate for 7 days
**.app.dataSizeInBytes = 10000
**.app.usedRNG = 1



# forwarding layer parameters
**.forwardingLayer = "KSpraywaitRoutingLayer"
**.forwarding.maximumCacheSize = 5000000byte # 5 MB cache
**.forwarding.antiEntropyInterval = 300s
**.forwarding.maximumHopCount = 25
**.forwarding.usedRNG = 3
**.forwarding.spraywaitFlavour = "binary"
**.forwarding.noDuplicate = 4



# wireless interface parameters
**.linkLayer = "KWirelessInterface"
**.link.wirelessRange = 30m
**.link.neighbourScanInterval = 1s
**.link.bandwidthBitRate = 100000bps # 100 Kbps
**.link.wirelessHeaderSize = 16byte # BT header
**.link.usedRNG = 4



# INET mobility parameters (SWIM)
**.constraintAreaMinX = 0m
**.constraintAreaMinY = 0m
**.constraintAreaMinZ = 0m
**.constraintAreaMaxX = 1500m
**.constraintAreaMaxY = 1500m
**.constraintAreaMaxZ = 0m
**.updateInterval = 1s # test with 0s too, and let getCurrentPosition update the display string from a test module
**.mobility.initFromDisplayString = false
**.mobilityType = "SWIMMobility"
**.mobility.noOfLocations = 200
**.mobility.Hosts = 500
**.mobility.popularityDecisionThreshold = 7
**.mobility.returnHomePercentage = 15
**.mobility.neighbourLocationLimit = 200m
**.mobility.speed = 1.5mps
**.mobility.radius = 2m
**.mobility.alpha = 0.5
**.mobility.waitTime = uniform(1200s, 28800s, 5) # 20 mins - 8 hrs
**.mobility.usedRNG = 5



[Config UBM-Epidemic-ExtendedSWIM]

# network parameters
**.ubmEnabled = true
**.notificationGen = "KBasicNotificationGenerator"
**.notificationGenerator.notificationGenDistribution = 1     # 1=constant, 2=exponential, 3=uniform
**.notificationGenerator.interEventTimeDuration = 900s        # when exponential or uniform, then mean
**.notificationGenerator.radius = 10m
**.notificationGenerator.locationsFilePath = "locations.txt"
**.notificationGenerator.eventsFilePath = "events.txt"
**.notificationGenerator.usedRNG = 1



# basic user behaviour model parameters
**.userBahaviourModel = "KBasicUBM"
**.ubm.keywordsFilePath = "properties.txt"
**.ubm.eventsFilePath = "events.txt"
**.ubm.usedRNG = 2



# basic ubm app parameters
**.applicationLayer = "KBasicUBMApp"



# forwarding layer parameters
**.forwardingLayer = "KEpidemicRoutingLayer"
**.forwarding.maximumCacheSize = 5000000byte # 5 MB cache
**.forwarding.antiEntropyInterval = 300s
**.forwarding.maximumHopCount = 25
**.forwarding.usedRNG = 3



# wireless interface parameters
**.linkLayer = "KWirelessInterface"
**.link.wirelessRange = 30m
**.link.neighbourScanInterval = 1s
**.link.bandwidthBitRate = 100000bps # 100 Kbps
**.link.wirelessHeaderSize = 16byte # BT header
**.link.usedRNG = 4



# mobility parameters
**.constraintAreaMinX = 0m
**.constraintAreaMinY = 0m
**.constraintAreaMinZ = 0m
**.constraintAreaMaxX = 1500m
**.constraintAreaMaxY = 1500m
**.constraintAreaMaxZ = 0m
**.updateInterval = 1s # test with 0s too, and let getCurrentPosition update the display string from a test module
**.mobility.initFromDisplayString = false
**.mobilityType = "ExtendedSWIMMobility"
**.mobility.noOfLocations = 200
**.mobility.popularityDecisionThreshold = 7
**.mobility.returnHomePercentage = 15
**.mobility.neighbourLocationLimit = 200m
**.mobility.speed = 1.5mps
**.mobility.radius = 2m
**.mobility.alpha = 0.5
**.mobility.waitTime = uniform(1200s, 28800s, 5) # 20 mins - 8 hrs
**.mobility.locationsFilePath = "locations.txt"
**.mobility.usedRNG = 5



[Config UBM-Keetchi-ExtendedSWIM]

# network parameters
**.ubmEnabled = true
**.notificationGen = "KBasicNotificationGenerator"
**.notificationGenerator.notificationGenDistribution = 1     # 1=constant, 2=exponential, 3=uniform
**.notificationGenerator.interEventTimeDuration = 900s        # when exponential or uniform, then mean
**.notificationGenerator.radius = 10m
**.notificationGenerator.locationsFilePath = "locations.txt"
**.notificationGenerator.eventsFilePath = "events.txt"
**.notificationGenerator.usedRNG = 1



# basic user behaviour model parameters
**.userBahaviourModel = "KBasicUBM"
**.ubm.keywordsFilePath = "properties.txt"
**.ubm.eventsFilePath = "events.txt"
**.ubm.usedRNG = 2



# basic ubm app parameters
**.applicationLayer = "KBasicUBMApp"



# forwarding layer parameters
**.forwardingLayer = "KKeetchiLayer"
**.forwarding.agingInterval = 600s
**.forwarding.maximumCacheSize = 5000000byte # 5 MB cache
**.forwarding.neighbourhoodChangeSignificanceThreshold = 0.25
**.forwarding.coolOffDuration = 300s
**.forwarding.learningConst = 0.5
**.forwarding.backoffTimerIncrementFactor = 1.5
**.forwarding.usedRNG = 3



# wireless interface parameters
**.linkLayer = "KWirelessInterface"
**.link.wirelessRange = 30m
**.link.neighbourScanInterval = 1s
**.link.bandwidthBitRate = 100000bps # 100 Kbps
**.link.wirelessHeaderSize = 16byte # BT header
**.link.usedRNG = 4



# mobility parameters
**.constraintAreaMinX = 0m
**.constraintAreaMinY = 0m
**.constraintAreaMinZ = 0m
**.constraintAreaMaxX = 1500m
**.constraintAreaMaxY = 1500m
**.constraintAreaMaxZ = 0m
**.updateInterval = 1s # test with 0s too, and let getCurrentPosition update the display string from a test module
**.mobility.initFromDisplayString = false
**.mobilityType = "ExtendedSWIMMobility"
**.mobility.noOfLocations = 200
**.mobility.popularityDecisionThreshold = 7
**.mobility.returnHomePercentage = 15
**.mobility.neighbourLocationLimit = 200m
**.mobility.speed = 1.5mps
**.mobility.radius = 2m
**.mobility.alpha = 0.5
**.mobility.waitTime = uniform(1200s, 28800s, 5) # 20 mins - 8 hrs
**.mobility.locationsFilePath = "locations.txt"
**.mobility.usedRNG = 5

